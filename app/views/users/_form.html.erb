<div class="container mt-5">
  <div class="row">
    <div class="col-lg-8 offset-lg-2">
      <h1 class="mb-4"><%= user.new_record? ? 'Create Profile' : 'Edit Profile' %></h1>

      <%= form_for(user, html: { class: 'needs-validation', novalidate: true }) do |form| %>
        <% if user.errors.any? %>
          <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading"><%= pluralize(user.errors.count, "error") %> prohibited this user from being saved:</h4>
            <ul>
              <% user.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        <% end %>

        <div class="form-group">
          <%= form.label :email %>
          <%= form.email_field :email, class: 'form-control', placeholder: 'Enter email' %>
        </div>

        <div class="form-group">
          <%= form.label :address %>
          <%= form.text_field :address, class: 'form-control', placeholder: 'Enter address' %>
        </div>

        <div class="form-group">
          <%= form.label :province %>
          <%= form.select :province_id, Province.all.collect { |p| [p.name, p.id] }, { include_blank: 'Select Province' }, class: 'form-control custom-select' %>
        </div>

        <div class="form-group">
          <%= form.label :image %>
          <div class="custom-file">
            <%= form.file_field :image, accept: 'image/jpeg,image/gif,image/png', class: 'custom-file-input', id: 'userImage' %>
            <label class="custom-file-label" for="userImage">Choose file</label>
          </div>
        </div>

        <div class="actions mt-4">
          <%= form.submit user.new_record? ? 'Create' : 'Update', class: 'btn btn-primary btn-lg btn-block' %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function() {
    'use strict';
    window.addEventListener('load', function() {
      // Fetch all the forms we want to apply custom Bootstrap validation styles to
      var forms = document.getElementsByClassName('needs-validation');
      // Loop over them and prevent submission
      var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
</script>
